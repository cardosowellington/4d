@use 'sass:math';

// variables
$grid-columns: 12;
$grid-gaps:(
  "0": 0,
  "1": 10px,
  "2": 20px
);

$layout-values: flex-start, flex-end, center, space-between, space-around;
$layout-values-flex: column, column-reverse, row, row-reverse, initial;

// base layout classes
.wrapper{
  width: auto;
  max-width: 1215px;
  margin: 0 auto;
  padding: 0 15px;
}
.row{
  display: flex;
  flex-flow: row wrap;
}

// columns classes
@include xs{
  @for $i from 1 through $grid-columns{
    .col-xs-#{$i}{
      flex-grow: 0;
      width: math.div( $i * 100%, $grid-columns );
    }
  }
}
@include sm{
  @for $i from 1 through $grid-columns{
    .col-sm-#{$i}{
      flex-grow: 0;
      width: math.div( $i * 100%, $grid-columns );
    }
  }
}
@include md{
  @for $i from 1 through $grid-columns{
    .col-md-#{$i}{
      flex-grow: 0;
      width: math.div( $i * 100%, $grid-columns );
    }
  }
}
@include lg{
  @for $i from 1 through $grid-columns{
    .col-lg-#{$i}{
      flex-grow: 0;
      width: math.div( $i * 100%, $grid-columns );
    }
  }
}
@include xl{
  @for $i from 1 through $grid-columns{
    .col-xl-#{$i}{
      flex-grow: 0;
      width: math.div( $i * 100%, $grid-columns );
    }
  }
}

// grid gaps
@each $key, $val in $grid-gaps{
  .gap-#{$key} > *{
    padding: 0 $val;
  }
  .gap-#{$key}{
    margin-left: -$val;
    margin-right: -$val;
  }
}

// justify classes
@each $key, $val in $layout-values{
  .justify-#{$key}{
    justify-content: $val;
  }
}